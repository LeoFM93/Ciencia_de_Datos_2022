data |>
ggplot() +
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) +
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year) +
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}") +
shadow_wake(0.5)
install.packages("gapminder")
source("~/.active-rstudio-document", echo=TRUE)
# Para configurar qué tipo de celda será esta hacemos click a configuración ->
library(tidyverse)
install.packages("gapminder")
library(gadminder)
# Para configurar qué tipo de celda será esta hacemos click a configuración ->
library(tidyverse)
install.packages("gapminder")
library(gadminder)
# Para configurar qué tipo de celda será esta hacemos click a configuración ->
library(tidyverse)
install.packages("gapminder")
library(gapminder)
install.packages("Rtools")
# Para configurar qué tipo de celda será esta hacemos click a configuración
library(tidyverse)
install.packages("gapminder")
library(gapminder)
install.packages("gapminder")
# Para configurar qué tipo de celda será esta hacemos click a configuración
library(tidyverse)
install.packages("gapminder")
library(gapminder)
knitr::opts_chunk$set(echo = TRUE)
```{r}
library(pacman)
install.packages("pacman")
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2")
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
help(tao)
data(tao)
head(tao)
summary(tao)
help(NA)
any_NA(tao)
summary(tao)
any_NA(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
help(tao)
data(tao)
head(tao)
summary(tao)
help(NA)
any_NA(tao)
n_complete(tao)
prop_miss(tao)
help(NA)
any_NA(tao)
head(tao)
data(tao)
head(tao)
summary(tao)
any_NA(tao)
naniar::any_NA(tao)
prop_miss(tao)
miss_var_table(tao)
n_miss(tao)
prop_miss(tao$Sea.Surface.Temp)
pct_miss(tao)
miss_var_table(tao)
miss_var_summary(tao)
miss_var_table(tao)
miss_care_table(tao)
miss_case_summary(tao)
miss_care_table(tao)
miss_case_summary(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice","tidyverse","DMwR2","naniar")
miss_case_summary(tao)
miss_care_table(tao)
vis_miss(tao) # Primera visualización macro
gg_miss_case(tao) # Número de casos según número de valoers perdidos
gg_miss_upset(tao) # Valores perdidos de acuerdo a posibles combinaciones
vis_miss(tao) # Primera visualización macro
vis_miss(tao) # Primera visualización macro
miss_case_summary(tao)
miss_care_table(tao)
gg_miss_case(tao) # Número de casos según número de valoers perdidos
gg_miss_upset(tao) # Valores perdidos de acuerdo a posibles combinaciones
# Podemos utilizar el Aggregation plot
a = baggr(tao,numbers=T)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice","tidyverse","DMwR2","naniar")
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice","tidyverse","DMwR2","naniar")
matrixplot(tao)
# Foto de tu dataset en colores.
# Rojo: Los datos faltantes
# Escala de grises según valores de vectores numéricos
# Para poder inspeccionar necesitamos que la gráfica sea interactiva y utilizamos x11()
x11()
matrixplot(tao)
VIM::pbox(TAO[4:6],POS=1)
VIM::pbox(tao[4:6],POS=1)
VIM::pbox(tao[4:6], pos=1)
VIM::pbox(tao[4:6], pos=1)
VIM::pbox(tao[4:6], pos=1)
VIM::pbox(tao[4:6], pos=1)
naniar::any_NA(tao) # REGRESAR AL PROBLEMA
naniar::any_na(tao) # REGRESAR AL PROBLEMA
any_na(tao) # REGRESAR AL PROBLEMA
miss_care_table(tao)
miss_case_table(tao) # NO ENCUENTRA LA FUNCIÓN
a = baggr(tao,numbers=T)
a = aggr(tao,numbers=T) #
help(NA)
any_na(tao)
vis_miss(tao) # Primera visualización macro
vis_miss(tao) # Primera visualización macro
VIM::vis_miss(tao) # Primera visualización macro
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
help(tao) # Pedimos la información básica del objeto 'tao'
VIM::data(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
help(tao) # Pedimos la información básica del objeto 'tao'
data(tao, package = "VIM")
summary(tao)
head(tao)
summary(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
help(tao) # Pedimos la información básica del objeto 'tao'
data(tao, package ="VIM")
summary(tao)
head(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar") #Instalamos los paquetes que vamos a necesitar
data(tao, package ="VIM") # Aunque puede jalar el objeto sin necesidad de especificar el paquete, cuando no especificamos podría jalarme un objeto de nombre similar en otro paquete.
summary(tao)
head(tao)
any_na(tao)
n_miss(tao)
prop_miss(tao) # Proporción de perdidos en toda la variable
prop_miss(tao$Sea.Surface.Temp) # Proporción de perdidos en toda la variable
pct_miss(tao)
n_complete(tao)
prop_miss(tao) # Proporción de perdidos en toda la variable
prop_miss(tao$Sea.Surface.Temp) # Proporción de perdidos en toda la variable
pct_miss(tao)
view(tao)
view(tao)
install.packages("mapsPERU")
install.packages("mapsPERU")
install.packages("sf")
install.packages("sf")
library(remotes)
Business Understanding
Business_Understanding = {"Determine Bussiness Objectives" : ("Background", "Business Objectives", "Business Succes Criteria"),
Business_Understanding = c("Determine Bussiness Objectives" : ("Background", "Business Objectives", "Business Succes Criteria"),
Business_Understanding = c("Determine Bussiness Objectives" : c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" : c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" : c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" : c("Project Plan", "Initial Assesment of Tools and Techniques"))
view(Business_Understanding)
Business_Understanding = c("Determine Bussiness Objectives" : c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" : c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" : c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" : c("Project Plan", "Initial Assesment of Tools and Techniques"))
print(Business_Understanding)
Business_Understanding = c("Determine Bussiness Objectives" : c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" : c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" : c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" : c("Project Plan", "Initial Assesment of Tools and Techniques"))
Business_Understanding <- c("Determine Bussiness Objectives" : c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" : c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" : c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" : c("Project Plan", "Initial Assesment of Tools and Techniques"))
Business_Understanding <- c("Determine Bussiness Objectives" : ("Background", "Business Objectives", "Business Succes Criteria"),
Business_Understanding <- c("Determine Bussiness Objectives" : "Background",
"Asses Situation" : "Inventory of Resources",
"Determine Data Mining Goals" : "Data Mining Goals",
"Produce Project Plan" : "Project Plan", "Initial Assesment of Tools and Techniques")
Business_Understanding <- c("Determine Bussiness Objectives" = c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" = c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" = c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" = c("Project Plan", "Initial Assesment of Tools and Techniques"))
print(Business_Understanding)
Business_Understanding <- c("Determine Bussiness Objectives" = c("Background", "Business Objectives", "Business Succes Criteria"),
"Asses Situation" = c("Inventory of Resources", "Requirements, assumptions ands constraints", "Risks and Contingencies", "Terminology", "Costs and Benefits"),
"Determine Data Mining Goals" = c("Data Mining Goals", "Data Mining Success Criteria"),
"Produce Project Plan" = c("Project Plan", "Initial Assesment of Tools and Techniques"))
Business_Understanding
n_complete(tao)
n_miss(tao)
n_miss(tao)
n_complete(tao)
miss_var_summary(tao)
miss_var_table(tao)
miss_case_summary(tao)
miss_case_table(tao)
miss_case_summary(tao)
miss_case_table(tao)
miss_var_summary(tao)
miss_var_table(tao)
summary(tao)
head(tao)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar") #Instalamos los paquetes que vamos a necesitar
data(tao, package ="VIM") # Aunque puede jalar el objeto sin necesidad de especificar el paquete, cuando no especificamos podría jalarme un objeto de nombre similar en otro paquete.
tao
miss_case_summary(tao)
miss_case_table(tao)
miss_var_summary(tao)
miss_var_table(tao)
summary(tao)
vis_miss(tao) # Primera visualización macro
vis_miss(tao) # Primera visualización macro
gg_miss_case(tao) # Número de casos según número de valores perdidos
miss_case_summary(tao)
miss_case_table(tao)
vis_miss(tao)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar") #Instalamos los paquetes que vamos a necesitar
data(tao, package ="VIM") # Aunque puede jalar el objeto sin necesidad de especificar el paquete, cuando no especificamos podría jalarme un objeto de nombre similar en otro paquete.
summary(tao)
head(tao)
any_na(tao)
n_miss(tao)
n_complete(tao)
prop_miss(tao)
prop_miss(tao$Sea.Surface.Temp)
pct_miss(tao)
pct_miss(tao$Air.Temp)
miss_var_summary(tao)
miss_var_table(tao)
miss_case_summary(tao)
miss_case_table(tao)
miss_case_summary(tao)
miss_case_table(tao)
gg_miss_upset(tao)
library(haven)
library(tidyverse)
library(pacman)
p_load("VIM","DEoptimR","minqa","nloptr","simputation", "mice", "tidyverse", "DMwR2", "naniar")
lapop <- read_dta("PER_2021_LAPOP_AmericasBarometer_v1.2_w.dta")
lapop <- read_dta("Ciencia de Datos/Ciencia_de_Datos_2022/Clases R/Grupo/PER_2021_LAPOP_AmericasBarometer_v1.2_w.dta")
sublapop <- select(.data=lapop,"q2","q1tb","prov1t","b2","it1","cses6n","ur1new","ing4","gi0n","anestg")
view(sublapop)
summary(sublapop)
n_miss(sublapop)
n_complete(sublapop)
prop_miss(sublapop)
Porcentaje <- pct_miss(sublapop)
if (Porcentaje>0.15){
message("INTERPRETACIÓN PERJUDICIAL")
} else if (Porcentaje>0.5){
message("MÉTODOS SOFÍSTICADOS")
} else if (Porcentaje>0.1){
message("MANEJABLE")
} else if (Porcentaje<=0.1){
message("IRRELEVANTE")
}
miss_var_summary(sublapop)
miss_var_table(sublapop)
miss_case_summary(tao)
miss_case_table(tao)
class(sublapop$it1)
class(sublapop$ing4)
vis_miss(sublapop_02)
sublapop_02 <- select(.data=sublapop,"ing4","it1")
view(sublapop_02)
summary(sublapop_02)
vis_miss(sublapop_02)
gg_miss_case(tao)
gg_miss_case(sublapop_02)
gg_miss_upset(sublapop_02)
summary(sublapop_02)
gg_miss_upset(sublapop_02)
setwd("~/Ciencia de Datos/Ciencia_de_Datos_2022/Clases R")
